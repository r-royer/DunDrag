@using DunDrag.ViewModels
@model SortsViewModel

@{
    ViewData["Title"] = "Index";
}

@if (!Model.PersonnageId.HasValue)
{
    <h2>Liste des sorts</h2>
}
else
{
    <h2>Choix des sorts pour @Model.Personnage.Nom</h2>
}


@using (Html.BeginForm())
{
    <fieldset>
        <div>
            <p>
                @Html.Label("Ecole")
                <select name="ecole" asp-for="@Model.Ecole" asp-items="Html.GetEnumSelectList<Ecole>()">
                    <option value="-1" selected="selected"></option>
                </select>
                |
                @Html.Label("Classe")
                <select name="classe" asp-for="@Model.Classe" asp-items="(SelectList)@Model.Classes">
                    <option value="-1" selected="selected"></option>
                </select>
                |
                @Html.Label("Niveau min")
                <select name="niveauMin" asp-for="@Model.NiveauMin">
                    @for (int i = 0; i < 10; i++)
                    {
                        <option value="@i">
                            @i
                        </option>
                    }
                </select>
                |
                @Html.Label("Niveau max")
                <select name="niveauMax" asp-for="@Model.NiveauMax">
                    @for (int i = 0; i < 10; i++)
                    {
                        <option value="@i">
                            @i
                        </option>
                    }
                </select>
                |
                @Html.Label("Nom")
                <input type="text" name="Recherche" value="@Model.Recherche" />
                |
                <input type="submit" value="Rechercher" /> |
                @Html.HiddenFor(model => model.PersonnageId)
                <a asp-action="Index" class="btn">
                    Supprimer le filtre
                </a>
            </p>
        </div>
    </fieldset>
}

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-SortOrder="@Model.NomSortParam"
                   asp-route-Recherche="@Model.Recherche"
                   asp-route-Ecole="@Model.Ecole"
                   asp-route-Classe="@Model.Classe"
                   asp-route-NiveauMin="@Model.NiveauMin"
                   asp-route-NiveauMax="@Model.NiveauMax"
                   asp-route-PersonnageId="@Model.PersonnageId">
                    Nom
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-SortOrder="@Model.NiveauSortParam"
                   asp-route-Recherche="@Model.Recherche"
                   asp-route-Ecole="@Model.Ecole"
                   asp-route-Classe="@Model.Classe"
                   asp-route-NiveauMin="@Model.NiveauMin"
                   asp-route-NiveauMax="@Model.NiveauMax"
                   asp-route-PersonnageId="@Model.PersonnageId">
                    Niveau
                </a>
            </th>
            <th>
                Ecole
            </th>
            <th>
                Rituel
            </th>
            <th>
                Classes
            </th>
            <th>
                Source
            </th>
            <th></th>
            @if (Model.PersonnageId.HasValue)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Sorts)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Nom)
                    </a>
                </td>
                <td>
                    <span class="badge badge-info h1">@Html.DisplayFor(model => item.Niveau)</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ecole)
                </td>
                <td>
                    @if (item.Rituel)
                    {
                        <i class="fas fa-mortar-pestle"></i>
                    }
                </td>
                <td>
                    @string.Join("; ", item.SortsClasses.Select(sc => sc.Classe.Nom))
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Source)
                </td>
                <td>
                    <a class="btn" data-toggle="modal" data-target="@string.Concat("#modalSort", item.Id)">
                        <i class="fas fa-eye"></i>
                    </a>
                    @await Html.PartialAsync("_DetailsSortPartial", item)
                </td>
                @if (Model.PersonnageId.HasValue)
                {
                <td>
                    @if (item.PersonnagesSorts.Any(ps => ps.PersonnageId == Model.PersonnageId.Value))
                    {
                        <a class="btn" asp-action="SupprimerSortPersonnage" asp-route-personnageId="@Model.PersonnageId.Value" asp-route-sortId="@item.Id">
                            <i class="fas fa-minus-square text-danger"></i>
                        </a>
                    }
                    else
                    {
                        <a class="btn" asp-action="AjouterSortPersonnage" asp-route-personnageId="@Model.PersonnageId.Value" asp-route-sortId="@item.Id">
                            <i class="fas fa-plus-square text-success"></i>
                        </a>
                    }
                </td>
                }
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Sorts.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Sorts.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-SortOrder="@Model.SortOrder"
   asp-route-PageIndex="@(Model.PageIndex - 1)"
   asp-route-Recherche="@Model.Recherche"
   asp-route-Ecole="@Model.Ecole"
   asp-route-Classe="@Model.Classe"
   asp-route-NiveauMin="@Model.NiveauMin"
   asp-route-NiveauMax="@Model.NiveauMax"
   asp-route-PersonnageId="@Model.PersonnageId"
   class="btn btn-primary @prevDisabled">
    Précédent
</a>
<a asp-action="Index"
   asp-route-SortOrder="@Model.SortOrder"
   asp-route-PageIndex="@(Model.PageIndex + 1)"
   asp-route-Recherche="@Model.Recherche"
   asp-route-Ecole="@Model.Ecole"
   asp-route-Classe="@Model.Classe"
   asp-route-NiveauMin="@Model.NiveauMin"
   asp-route-NiveauMax="@Model.NiveauMax"
   asp-route-PersonnageId="@Model.PersonnageId"
   class="btn btn-primary @nextDisabled">
    Suivant
</a>